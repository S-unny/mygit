变量
	只能包含 大写字母(A-Z)
			小写字母(a-z)
			数字(0-9)
			下划线(_)
	不允许以数字开头
	以下划线开头通常有特殊含义
	关键字不能作为变量名

关键字
	False		class		finally		is			return
	None		continue	for 		lambda		try
	True		def			from		nonlocal	while
	and			del 		global		not 		with
	as			elif		if			or			yield
	assert		else		import		pass
	break 		except		in 			raise

数字
	运算符 +
		  -
		  *
		  /		浮点数除法		7/2=3.5
		  //	整数除法			7//2=3
		  %		求余数			7%3=1
		  **	幂				3**4=81

		  1e2 = 100.0

	基数
		0b(0B)  二进制
		0o(0O)	八进制
		0x(0X)	十六进制

	类型转换
		int(True) = 1
		int(99.9) = 99
		int('99') = 99
		int('+12')= 12
		int('99.9')  error 无法处理包含小数点的字符串


		True+2=3 False+2=2


		float(True)		= 1.0
		float(98)		= 98.0
		float('98.9')	= 98.9
		float('1e2')	= 100.0

		str(98.9)	= 98.9
		str(98) 	=98
		str(True)	True

字符串
	本质：字符序列，无法修改，但是可以将字符串的一部分
		 复制到新的字符串中，达到相同的效果
	‘hello'
	"hello"
	'''hello'''  """hello""" 用于多行字符串
	''空字符串
	base = ''	 base+='hello'		base='hello' 用作字符串操作

	+ 拼接
	>>> a = 'Duck.'
	>>> b = a
	>>> c = 'Gray Duck'
	>>> a+b+c
	'Duck.Duck.Gray Duck'   无空格
	>>> print(a,b,c)
	Duck. Duck. Gray Duck	有空格
	>>> print(a+b+c)
	Duck.Duck.Gray Duck		无空格

	* 复制
	>>> 'Duck'*4
	'DuckDuckDuckDuck'
	>>> a = 'Duck'
	>>> a*4
	'DuckDuckDuckDuck'

	[]提取字符串
	>>> letters='abc'
	>>> letters[0]
	'a'
	>>> letters[2]
	'c'
	>>> letters[-1]
	'c'
	>>> letters[-3]
	'a'
	>>> lettera[0]=e 	error 字符串不可变

	[start:end:step] 切片(slice)
	[:]					提取整个字符串
	[start:]			从start提取到结尾
	[:end]				从开头提取到 end-1
	[start:end]			从start提取到 end-1
	[start:end:step]	从start提取到 end-1,每step个字符提取一个

	>>> letters='abcdefg'
	>>> letters[:]
	'abcdefg'
	>>> letters[0:-1]
	'abcdef'
	>>> letters[0:]
	'abcdefg'
	>>> letters[6:]
	'g'
	>>> letters[-2:]
	'fg'
	>>> letters[:-1:2]
	'ace'
	>>> letters[: :2]
	'aceg'				start包含,end不包含

	>>> letters[2:3]
	'c'
	>>> letters[2:-4]
	'c'
	>>> letters[2]
	'c'
	>>> letters[-5]
	'c'

	len() 获取长度
	>>> letters='abcdefg'
	>>> len(letters)
	7

	string.split()		用空白字符——换行符、空格、制表符分隔字符串
	string.split(',')	用','分隔字符串
	>>> todos='get gloves,get mask,give cat vitamins,call ambulance'
	>>> todos.split(',')
	['get gloves', 'get mask', 'give cat vitamins', 'call ambulance']
	>>> todos.split()
	['get', 'gloves,get', 'mask,give', 'cat', 'vitamins,call', 'ambulance']

	join()		将列表中的字符串合并
	>>> a = todos.split(',')
	>>> a
	['get gloves', 'get mask', 'give cat vitamins', 'call ambulance']
	>>> ','.join(a)
	'get gloves,get mask,give cat vitamins,call ambulance'

	string.startswith("str")		string是否以str开头
	string.endswith('str')			string是否以str结尾
	string.find('str')				sting中第一次出现str的位置（偏移量）
	srting.rfind('str')				string中最后一次出现str的位置（偏移量）
	string.count('str')				string中str出现的次数
	string.isalnum()				string中全部是字母或数字么？

	string.strip('str')				移除sring首尾的str
	string.capitalize()				使string第一个字母大写
	string.title()					使string中所有单词首字母大写
	string.upper()					所有字母大写
	string.lower()					所有字母小写
	string.swapcase()				大小写反转

https://docs.python.org/3/library/stdtypes.html#string-methods
所有字符串函数






转义 \
	\n 换行
	\t 制表符，用于对齐
	\\ 打印\
	\"打印"

	


